#!/bin/bash

#
# Script that launches ALL applications found in standard .desktop file directories,
# while logging the launch process and skipping certain applications.
#
# Beware: Launching all applications may lead to system instability or crashes.
#
# Beware no. 2:
# This script was partially generated by an AI language model (vibe-coded).
# I am not responsible for any damage caused by its use.
#

logfile="./launched_apps.log"
dirs=(
    "/usr/share/applications"
    "$HOME/.local/share/applications"
)

# Skip list (list should be in lowercase, partial matches allowed, testing is case-insensitive)
skip_list=(
    "org.gnome.shell"
    "org.gnome.shell.portalhelper"
    "org.gnome.snapshot"
    "org.gnome.remotedesktop.handover"
    "waydroid"
    "jupyter"
    "ibus"
    "gcm"
    "gcr"
    "calf"
    "cutter"
    "mongodb"
    "kcm"
    "install4j"
    "looking-glass"
    "qemu"
    "protontricks-launch"
    "gnome-initial-setup"
)

# Choose launcher once at startup: prefer gtk-launch, fall back to xdg-open
if command -v gtk-launch >/dev/null 2>&1; then
    launcher_cmd="gtk-launch"
    launcher_type="app_id"
elif command -v xdg-open >/dev/null 2>&1; then
    launcher_cmd="xdg-open"
    launcher_type="desktop_file"
else
    launcher_cmd=""
    launcher_type=""
fi

echo "Launch log started: $(date)" > "$logfile"
echo "Using launcher: ${launcher_cmd:-none} (type: ${launcher_type:-none})" >> "$logfile"

# If no launcher was found at startup, log and exit once
if [ -z "$launcher_cmd" ]; then
    echo "No available launcher found at startup; aborting." >> "$logfile"
    exit 1
fi

for dir in "${dirs[@]}"; do
    [ -d "$dir" ] || continue
    for desktop_file in "$dir"/*.desktop; do
        [ -f "$desktop_file" ] || continue
        app_id=$(basename "$desktop_file" .desktop)
        lower_id="${app_id,,}"
        
        skip=false
        for skip_item in "${skip_list[@]}"; do
            if [[ "$lower_id" == "$skip_item" || "$lower_id" == "$skip_item"* ]]; then
                skip=true
                break
            fi
        done
        if $skip; then
            echo "Skipping: $app_id"
            continue
        fi

        echo "Launching: $app_id"

        if [ "$launcher_type" = "app_id" ]; then
            "$launcher_cmd" "$app_id" 2>/dev/null &
        else
            "$launcher_cmd" "$desktop_file" 2>/dev/null &
        fi

        echo "$(date '+%Y-%m-%d %H:%M:%S') - Launched: $app_id" >> "$logfile"

    done
done

echo "Launch session complete: $(date)" >> "$logfile"